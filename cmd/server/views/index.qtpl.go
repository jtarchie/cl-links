// Code generated by qtc from "index.qtpl". DO NOT EDIT.
// See https://github.com/valyala/quicktemplate for details.

//line views/index.qtpl:1
package views

//line views/index.qtpl:1
import "github.com/jtarchie/cl-search/pkg/load"

//line views/index.qtpl:2
import "github.com/jtarchie/cl-search/pkg/query"

//line views/index.qtpl:4
import (
	qtio422016 "io"

	qt422016 "github.com/valyala/quicktemplate"
)

//line views/index.qtpl:4
var (
	_ = qtio422016.Copy
	_ = qt422016.AcquireByteBuffer
)

//line views/index.qtpl:4
func StreamIndex(qw422016 *qt422016.Writer, originalQuery string, query *query.Query, cities load.Cities) {
//line views/index.qtpl:4
	qw422016.N().S(`
<html>
  <head>
      <script src="https://cdnjs.cloudflare.com/ajax/libs/turbolinks/5.2.0/turbolinks.js"></script>
      <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/mini.css/3.0.1/mini-default.min.css">
      <meta name="viewport" content="width=device-width, initial-scale=1">
      <style>
        form input {
            width: 100%;
        }
      </style>
  </head>
  <body>
      <div class="container">
          <div class="row">
              <div class="col-sm-12 col-md-12 col-lg-12">
                  <form action="/">
                      <input type="text" value="`)
//line views/index.qtpl:21
	qw422016.E().S(originalQuery)
//line views/index.qtpl:21
	qw422016.N().S(`" placeholder="q:'classic guitar' year:<1995 include-pics" name="query">
                      <p>Example: <a href="/?query=`)
//line views/index.qtpl:22
	qw422016.N().U(`q:"jeep truck" include_nearby has-image bundle-duplicates auto-year:<1985`)
//line views/index.qtpl:22
	qw422016.N().S(`">q:"jeep truck" include_nearby has-image bundle-duplicates auto-year:<1985</a></p>
                  </form>
              </div>
          </div>
          <div class="row">
              <div class="col-sm-12 col-md-12 col-lg-12">
                  <ul>
                  `)
//line views/index.qtpl:29
	for _, city := range cities {
//line views/index.qtpl:29
		qw422016.N().S(`
                    <li><a target="_blank" href="`)
//line views/index.qtpl:30
		qw422016.E().S(query.URL(city))
//line views/index.qtpl:30
		qw422016.N().S(`">`)
//line views/index.qtpl:30
		qw422016.E().S(city.CountryName)
//line views/index.qtpl:30
		qw422016.N().S(` / `)
//line views/index.qtpl:30
		qw422016.E().S(city.RegionName)
//line views/index.qtpl:30
		qw422016.N().S(` / `)
//line views/index.qtpl:30
		qw422016.E().S(city.Name)
//line views/index.qtpl:30
		qw422016.N().S(`</a></li>
                  `)
//line views/index.qtpl:31
	}
//line views/index.qtpl:31
	qw422016.N().S(`
                  </ul>
              </div>
          </div>
      </div>
  </body>
</html>
`)
//line views/index.qtpl:38
}

//line views/index.qtpl:38
func WriteIndex(qq422016 qtio422016.Writer, originalQuery string, query *query.Query, cities load.Cities) {
//line views/index.qtpl:38
	qw422016 := qt422016.AcquireWriter(qq422016)
//line views/index.qtpl:38
	StreamIndex(qw422016, originalQuery, query, cities)
//line views/index.qtpl:38
	qt422016.ReleaseWriter(qw422016)
//line views/index.qtpl:38
}

//line views/index.qtpl:38
func Index(originalQuery string, query *query.Query, cities load.Cities) string {
//line views/index.qtpl:38
	qb422016 := qt422016.AcquireByteBuffer()
//line views/index.qtpl:38
	WriteIndex(qb422016, originalQuery, query, cities)
//line views/index.qtpl:38
	qs422016 := string(qb422016.B)
//line views/index.qtpl:38
	qt422016.ReleaseByteBuffer(qb422016)
//line views/index.qtpl:38
	return qs422016
//line views/index.qtpl:38
}
